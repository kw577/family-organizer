/* database family_organizer */

CREATE TABLE notes (
	id serial PRIMARY KEY,
	description VARCHAR (50) NOT NULL,
	active BOOLEAN NOT NULL
);


CREATE TABLE family (
	id 	serial PRIMARY KEY,
	name	VARCHAR (50) NOT NULL
);

CREATE TABLE user_account (
	id 		serial PRIMARY KEY,
	name		VARCHAR (50) NOT NULL,
	surname		VARCHAR (50) NOT NULL,
	email		VARCHAR (50) NOT NULL,
	password	VARCHAR (80) NOT NULL,
	role		VARCHAR (50) NOT NULL,
	enabled		BOOLEAN NOT NULL,
	family_id	int references family(id)
);


CREATE TABLE email_verification (
	id 	serial PRIMARY KEY,
	token	VARCHAR (100) NOT NULL,
	email 	VARCHAR (100) NOT NULL
);


CREATE TABLE event (
	id 		serial PRIMARY KEY,
	family_id	int references family(id) ON DELETE CASCADE,
	owner_id	int references user_account(id) ON DELETE CASCADE,
	title		VARCHAR (255) NOT NULL,
	start_date	TIMESTAMP, 
	end_date	TIMESTAMP, 
	localization	VARCHAR (255) NOT NULL,
	description	VARCHAR (2550) NOT NULL

);



CREATE TABLE invitation (
	id 		serial PRIMARY KEY,
	seen		BOOLEAN NOT NULL,
	user_id		int references user_account(id) ON DELETE CASCADE,
	event_id	int references event(id) ON DELETE CASCADE

);


//Wersja alternatywna
CREATE TABLE invitation (
	id 		serial PRIMARY KEY,
	seen		BOOLEAN NOT NULL,
	user_id		int,
	event_id	int,

	CONSTRAINT fk1_invitation FOREIGN KEY(user_id)REFERENCES user_account(id) ON DELETE CASCADE,
	CONSTRAINT fk2_invitation FOREIGN KEY(event_id)REFERENCES event(id) ON DELETE CASCADE
);



CREATE TABLE comment (
	id 		serial PRIMARY KEY,
	event_id	int references event(id) ON DELETE CASCADE,
	owner_id	int references user_account(id) ON DELETE CASCADE,
	date_posted	TIMESTAMP, 
	description	VARCHAR (2550) NOT NULL

);















